push 0
push 252561409 #Charcoal
push 1724793494 #Coal
push -983091249 #Cobalt
push -707307845 #Copper
push -1348105509 #Gold
push 1758427767 #Iron
push -190236170 #Lead
push 1830218956 #Nickel
push 1103972403 #Silicon
push -916518678 #Silver
push -1516581844 #Uranium
push -831480639 #Biomass
push 0
push -404336834 #Copper
push 226410516 #Gold
push -1301215609 #Iron
push 2134647745 #Lead
push -1406385572 #Nickel
push -290196476 #Silicon
push -929742000 #Silver
push 0
push 1058547521 #Constantan
push 502280180 #Electrum
push -297990285 #Invar
push -82508479 #Solder
push -654790771 #Steel
push 0
push 412924554 #Astrolloy
push 1579842814 #Hastelloy
push -787796599 #Inconel
push -1897868623 #Stellite
push 156348098 #Waspaloy
push 0
brlt sp 512 -1
alias valve d0
alias flipflop d1
alias reqIC d2
alias pQty r4
alias sortQty r5
alias sQty r6
alias sMat r7
alias sHash r8
alias rVal r9
alias rQty r10
alias rInf r11
alias rDev r12
alias rMat r13
alias rStat r14
alias rFlag r15
define infID 8 #SFG == printID, 4 #Tool
s valve Open 0
s valve Setting 1
s valve On 1
s flipflop Setting 0
s flipflop SettingOutput 0
s flipflop On 1
main:
yield
ls sQty valve 0 Quantity
beqz sQty main
ls sHash valve 0 OccupantHash
move sp 33 # Get Material
beq sp 0 default
pop r0
brne r0 sHash -2 # Loop around Stack to find hash
seq r0 sp 1
add sp sp r0 # Handle charcoal as coal
move sMat sp
mul r0 sMat 10000 # Get ReqIC Data
mul r1 infID 100000000 # Prepare Inf in reqVal
add r0 r0 r1 # Add Inf value
add r0 r0 501 # Set Stat & Flag to Syn
jal startCom
seq r1 rDev infID # Prepare for dev == printer
bnezal r1 deCount
s valve Open 1
s flipflop Mode r1
seqz r0 sortQty
and r0 r0 r1
bnezal r0 updateData
sleep 2
j main
updateData:
sub r0 6 rStat
mul r0 r0 100
sub r0 r0 rFlag
add r0 r0 1
add r0 rVal r0
startCom: # This com method is used in info request
move r2 ra
yield
l rVal reqIC Setting
brnez rVal -2 # Loop until rVal == 0
s reqIC Setting r0 # Set the needed value
yield
l rVal reqIC Setting
breq rVal r0 -2 # Loop until rVal has changed
jal demux
brne rInf infID -8 # Stacker == 1XXX, restart until
brne rFlag 2 -9 # Wait for SYN-ACK, restart until
add r0 rVal 1 # Prepare Ack
s reqIC Setting r0 # Final Ack
j r2
demux: # new
move r3 15 # Prepare to get from Flag to Inf
move rQty rVal
mod rr3 rQty 100
div rQty rQty 100
floor rQty rQty
sub r3 r3 1
brgt r3 10 -4
j ra
deCount:
mul r0 rDev 32 # max 15 dev
sub r0 r0 64 # rDev 3 - 17
add sp sMat r0
pop r0
select r0 r0 r0 rQty
min pQty r0 sQty
sub r0 r0 sQty
max sortQty r0 0
push sortQty
j ra
default:
s valve Open 1
s flipflop Mode 0
j main